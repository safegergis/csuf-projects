2a.
    The first process will take 4 clock ticks, the second process will take 5 clock ticks
    Produce a trace of what would happen when you run these processes:

    Process 0
    cpu
    cpu
    cpu
    cpu

    Process 1
    io
    io_done

    Important behaviors:
    System will switch when the current process is FINISHED or ISSUES AN IO
    After IOs, the process issuing the IO will run LATER (when it is its turn)
3a. 
    Switching the order will have the process that requests an IO call go first, meaning it will be 5 ticks until the second process runs
3b.
    Process 2 was able to run while process 1 was blocked
3c.
    Switching the order will shorten the time it takes to run both processes because as process 1 has an io call, proccess 2 can run
3d.
    This happens because proccess 1 becomes block until the io call finishes in 5 clock ticks

        Time        PID: 0        PID: 1           CPU           IOs
    1         RUN:io         READY             1          
    2        BLOCKED       RUN:cpu             1             1
    3        BLOCKED       RUN:cpu             1             1
    4        BLOCKED       RUN:cpu             1             1
    5        BLOCKED       RUN:cpu             1             1
    6        BLOCKED          DONE                           1
    7*   RUN:io_done          DONE             1          

    Stats: Total Time 7
    Stats: CPU Busy 6 (85.71%)
    Stats: IO Busy  5 (71.43%)


4a.
    The program will take 11 clock ticks as the other process cannot run until the first process finishes it's io call
    Time        PID: 0        PID: 1           CPU           IOs
    1         RUN:io         READY             1          
    2        BLOCKED         READY                           1
    3        BLOCKED         READY                           1
    4        BLOCKED         READY                           1
    5        BLOCKED         READY                           1
    6        BLOCKED         READY                           1
    7*   RUN:io_done         READY             1          
    8           DONE       RUN:cpu             1          
    9           DONE       RUN:cpu             1          
    10           DONE       RUN:cpu             1          
    11           DONE       RUN:cpu             1   

5a.
    This is the default, it will run process 2 as process 1 goes through it's IO call
5b.
    the behavior is as predicted
    Time        PID: 0        PID: 1           CPU           IOs
    1         RUN:io         READY             1          
    2        BLOCKED       RUN:cpu             1             1
    3        BLOCKED       RUN:cpu             1             1
    4        BLOCKED       RUN:cpu             1             1
    5        BLOCKED       RUN:cpu             1             1
    6        BLOCKED          DONE                           1
    7*   RUN:io_done          DONE             1      

6a. 
    It will run the first process which requires an io call, which blocks the process, allowing all three proccesses to run after it, however there are 2 more instructions for an io call, where the iocall will take 10 ticks after all processes have ran
6b. 
    The behavior ran as predicted
6c. 
    This is not good for system resources, as the system could have ran each process in between the io calls
    Time        PID: 0        PID: 1        PID: 2        PID: 3           CPU           IOs
    1         RUN:io         READY         READY         READY             1          
    2        BLOCKED       RUN:cpu         READY         READY             1             1
    3        BLOCKED       RUN:cpu         READY         READY             1             1
    4        BLOCKED       RUN:cpu         READY         READY             1             1
    5        BLOCKED       RUN:cpu         READY         READY             1             1
    6        BLOCKED       RUN:cpu         READY         READY             1             1
    7*         READY          DONE       RUN:cpu         READY             1          
    8          READY          DONE       RUN:cpu         READY             1          
    9          READY          DONE       RUN:cpu         READY             1          
    10          READY          DONE       RUN:cpu         READY             1          
    11          READY          DONE       RUN:cpu         READY             1          
    12          READY          DONE          DONE       RUN:cpu             1          
    13          READY          DONE          DONE       RUN:cpu             1          
    14          READY          DONE          DONE       RUN:cpu             1          
    15          READY          DONE          DONE       RUN:cpu             1          
    16          READY          DONE          DONE       RUN:cpu             1          
    17    RUN:io_done          DONE          DONE          DONE             1          
    18         RUN:io          DONE          DONE          DONE             1          
    19        BLOCKED          DONE          DONE          DONE                           1
    20        BLOCKED          DONE          DONE          DONE                           1
    21        BLOCKED          DONE          DONE          DONE                           1
    22        BLOCKED          DONE          DONE          DONE                           1
    23        BLOCKED          DONE          DONE          DONE                           1
    24*   RUN:io_done          DONE          DONE          DONE             1          
    25         RUN:io          DONE          DONE          DONE             1          
    26        BLOCKED          DONE          DONE          DONE                           1
    27        BLOCKED          DONE          DONE          DONE                           1
    28        BLOCKED          DONE          DONE          DONE                           1
    29        BLOCKED          DONE          DONE          DONE                           1
    30        BLOCKED          DONE          DONE          DONE                           1
    31*   RUN:io_done          DONE          DONE          DONE             1          

    Stats: Total Time 31
    Stats: CPU Busy 21 (67.74%)
    Stats: IO Busy  15 (48.39%)

7a.
    This will allow the proccess with only cpu instructions to run in between iocalls for process 1
7b. 
    When process 1 finishes an io call, it will run the next one immediately, which is another io call, allowing the system to run the cpu only processes
7c.
    this is much more efficient. allowing the system to use the blocked time for each io call
        Time        PID: 0        PID: 1        PID: 2        PID: 3           CPU           IOs
    1         RUN:io         READY         READY         READY             1          
    2        BLOCKED       RUN:cpu         READY         READY             1             1
    3        BLOCKED       RUN:cpu         READY         READY             1             1
    4        BLOCKED       RUN:cpu         READY         READY             1             1
    5        BLOCKED       RUN:cpu         READY         READY             1             1
    6        BLOCKED       RUN:cpu         READY         READY             1             1
    7*   RUN:io_done          DONE         READY         READY             1          
    8         RUN:io          DONE         READY         READY             1          
    9        BLOCKED          DONE       RUN:cpu         READY             1             1
    10        BLOCKED          DONE       RUN:cpu         READY             1             1
    11        BLOCKED          DONE       RUN:cpu         READY             1             1
    12        BLOCKED          DONE       RUN:cpu         READY             1             1
    13        BLOCKED          DONE       RUN:cpu         READY             1             1
    14*   RUN:io_done          DONE          DONE         READY             1          
    15         RUN:io          DONE          DONE         READY             1          
    16        BLOCKED          DONE          DONE       RUN:cpu             1             1
    17        BLOCKED          DONE          DONE       RUN:cpu             1             1
    18        BLOCKED          DONE          DONE       RUN:cpu             1             1
    19        BLOCKED          DONE          DONE       RUN:cpu             1             1
    20        BLOCKED          DONE          DONE       RUN:cpu             1             1
    21*   RUN:io_done          DONE          DONE          DONE             1          

    Stats: Total Time 21
    Stats: CPU Busy 21 (100.00%)
    Stats: IO Busy  15 (71.43%)

8a.
    Process 0
  cpu
  io
  io_done
  io
  io_done

Process 1
  io
  io_done
  io
  io_done
8b.
    There is not much difference on this seed as there are more io calls than process with cpu calls
8c.
    Switch on end causes the process 2 to run after all three IO calls, making it take 3 ticks longer